services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    restart: unless-stopped
    ports:
      - "9100:9100"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HTTP_PORT: 9100
      KC_LOG_CONSOLE_COLOR: "true"
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -ex
        cp /opt/keycloak/providers/themes/*.jar /opt/keycloak/providers

        /opt/keycloak/bin/kc.sh build
        /opt/keycloak/bin/kc.sh start-dev --import-realm

    volumes:
      - ./.docker/keycloak-config/:/opt/keycloak/data/import/:ro
      - spi-theme:/opt/keycloak/providers/themes:ro
    depends_on:
      download-theme:
        condition: service_completed_successfully

  download-theme:
    image: busybox
    command:
      - /bin/sh
      - -c
      - |
        set -ex;
        wget -O /spi/theme-vaam-01.jar \
          "https://github.com/vymalo/vymalo-keycloak-theme/releases/download/v8cfdfb2/theme-vaam-01.jar"
        echo "Downloaded theme";
        ls -la /spi;
    volumes:
      - spi-theme:/spi

  postgres:
    image: postgres
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 500M
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vaam-eat}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vaam-eat-password}
      POSTGRES_DB: ${POSTGRES_DB:-vaam-eat}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432

  tracking:
    image: jaegertracing/all-in-one:latest
    ports:
      - "4318:4318" # OpenTelemetry receiver
      - "14268:14268" # Jaeger receiver
      - "16686:16686" # Jaeger UI
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  redis:
    image: redis
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 50M
    volumes:
      - redis:/data
    ports:
      - ${REDIS_PORT:-6379}:6379

  adminer:
    image: adminer
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: 50M
    ports:
      - ${ADMINER_PORT:-18080}:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-vaam-eat}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-vaam-eat-password}
      ADMINER_DESIGN: ${ADMINER_DESIGN:-dracula}
      ADMINER_PLUGINS: ${ADMINER_PLUGINS:-tables-filter tinymce}

  minio:
    image: bitnami/minio:latest
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 500M
    volumes:
      - minio:/bitnami/minio/data
    ports:
      - ${MINIO_PORT:-19000}:9000
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_BROWSER_SESSION_DURATION: 7d
      MINIO_BROWSER_LOGIN_ANIMATION: off

  minio-init:
    image: bitnami/minio
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 500M
    volumes:
      - .docker/minio/policy.json:/tmp/policy.json
    command:
      - /bin/bash
      - -c
      - |-
        set -e;

        mc alias set bucketer http://minio:9000 minio minio123;
        mc admin service restart bucketer --wait --json;

        sleep 5;

        mc mb bucketer/vaam-eat --ignore-existing

        mc anonymous set-json /tmp/policy.json bucketer/vaam-eat
    depends_on:
      minio:
        condition: service_started

  api:
    build:
      dockerfile: Dockerfile
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
    ports:
      - "16000:16000"
    environment:
      #USE_CLUSTER: 1
      LOG_LEVEL: error

      REDIS_URL: redis://redis:6379

      DATABASE_URL: postgres://vaam-eat:vaam-eat-password@postgres:5432/vaam-eat?ssl_mode=disable

  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"

volumes:
  db: {}
  redis: {}
  minio: {}
  spi-theme: {}
