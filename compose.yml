services:
  postgres:
    image: postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vaam-eat}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vaam-eat-password}
      POSTGRES_DB: ${POSTGRES_DB:-vaam-eat}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432

  tracking:
    image: jaegertracing/all-in-one:latest
    ports:
      - '4318:4318' # OpenTelemetry receiver
      - '14268:14268' # Jaeger receiver
      - '16686:16686' # Jaeger UI
    environment:
      COLLECTOR_OTLP_ENABLED: 'true'

  redis:
    image: redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 50M
    volumes:
      - redis:/data
    ports:
      - ${REDIS_PORT:-6379}:6379

  adminer:
    image: adminer
    deploy:
      resources:
        limits:
          cpus: '0.05'
          memory: 50M
    ports:
      - ${ADMINER_PORT:-18080}:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-vaam-eat}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-vaam-eat-password}
      ADMINER_DESIGN: ${ADMINER_DESIGN:-dracula}
      ADMINER_PLUGINS: ${ADMINER_PLUGINS:-tables-filter tinymce}

  minio:
    image: bitnami/minio:latest
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
    volumes:
      - minio:/bitnami/minio/data
    ports:
      - ${MINIO_PORT:-19000}:9000
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_BROWSER_SESSION_DURATION: 7d
      MINIO_BROWSER_LOGIN_ANIMATION: off

  minio-init:
    image: bitnami/minio
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 500M
    volumes:
      - .docker/minio/policy.json:/tmp/policy.json
    command:
      - /bin/bash
      - -c
      - |-
        set -e;

        mc alias set bucketer http://minio:9000 minio minio123;
        mc admin service restart bucketer --wait --json;

        sleep 5;

        mc mb bucketer/vaam-eat --ignore-existing

        mc anonymous set-json /tmp/policy.json bucketer/vaam-eat
    depends_on:
      minio:
        condition: service_started

  extract-pmtiles:
    image: debian:stable-slim
    volumes:
      - pmtiles-data:/pmtiles-data
      - ./.docker/minio/pmtiles-extract-and-download-in-docker.sh:/usr/local/bin/pmtiles-extract-and-download-in-docker.sh
    command:
      - /bin/bash
      - -c
      - |
        set -e
        apt-get update && apt-get install -y curl tar gzip unzip
        bash /usr/local/bin/pmtiles-extract-and-download-in-docker.sh
    depends_on:
      minio-init:
        condition: service_completed_successfully

  upload-pmtiles:
    image: bitnami/minio:latest # Has mc client
    volumes:
      - pmtiles-data:/pmtiles-data # Mount the shared volume
      - ./.docker/minio/pmtiles-upload.sh:/usr/local/bin/pmtiles-upload.sh # New script for upload
    command:
      - /bin/bash
      - -c
      - |-
        set -e
        bash /usr/local/bin/pmtiles-upload.sh
    depends_on:
      extract-pmtiles:
        condition: service_completed_successfully

  api:
    build:
      dockerfile: Dockerfile
      target: main
    depends_on:
      postgres:
        condition: service_started
      migration:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    ports:
      - '16000:3000'
    environment:
      AUTH_SECRET: 'bBOdRw82eYxyPkd9KakHp1DgrCUmdfug1XlW5gJQ08c='
      DATABASE_URL: postgres://vaam-eat:vaam-eat-password@postgres:5432/vaam-eat?ssl_mode=disable

      S3_ENDPOINT: 'minio'
      S3_ACCESS_KEY: 'minio'
      S3_SECRET_KEY: 'minio123'
      S3_PORT: '19000'
      S3_SCHEME: 'http'
      S3_BUCKET: 'vaam-eat'
      S3_CDN_URL: 'http://localhost:19000'

      NEXT_PUBLIC_MAPS_PMTILES_MINIO_BASE_URL: 'http://localhost:19000'
      NEXT_PUBLIC_MAPS_PMTILES_MINIO_BUCKET: 'vaam-eat'

      # https://opentelemetry.io/docs/languages/sdk-configuration/otlp-exporter/#endpoint-configuration
      OTEL_EXPORTER_OTLP_ENDPOINT: http://tracking:4318
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc

      REDIS_URL: redis://redis:6379
      REDIS_PREFIX: 'eat:vaam:store_'

      # Email Server (for Nodemailer)
      EMAIL_SERVER_HOST: maildev
      EMAIL_SERVER_PORT: 1025
      EMAIL_SERVER_USER:
      EMAIL_SERVER_PASSWORD:
      EMAIL_FROM: noreply@example.com

      APP_URL: http://localhost:16000

      EMGR_CDN: http://localhost:3000/api/images/resize

  migration:
    build:
      dockerfile: Dockerfile
      target: migration
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    environment:
      DATABASE_URL: postgres://vaam-eat:vaam-eat-password@postgres:5432/vaam-eat?ssl_mode=disable

  maildev:
    image: maildev/maildev
    ports:
      - '1080:1080'
      - '1025:1025'

volumes:
  db: {}
  redis: {}
  minio: {}
  pmtiles-data: {} # New volume for pmtiles data
